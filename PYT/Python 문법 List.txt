1. 공백으로 이루어진 한 문장으로 여러 인풋을 받을 때
a, b, c = map(int, input().split())
---------------------------------------------------------------
2. 인풋받은 문자열을 하나씩 나누어 숫자로 저장할 때
nums = [int(char) for char in b]
---------------------------------------------------------------
3. dictionary( key - value )
3-1) 정의 및 추가
dict = {}
dict[345] = 1
dict["apple"] = 1
dict["apple"] = "delicious"

3-2) 삭제
dict.pop(key, value)

3-3) 해당 키가 dict에 존재하는지
if "apple" in dict:

3-4) dict에 있는 값들을 순회하고 싶을 때때
for key, value in dict.items():
    print(f'key: {key}, value: {value}')
---------------------------------------------------------------
4. list
4-1) 선언
arr = []

4-2) 추가
arr.append(4)
    ㄴ 맨 뒤에 4를 추가
arr.insert(1, 4)
    ㄴ 인덱스 1 위치에 4 삽입

4-3) 확장( 리스트 + 리스트 )
arr1 = [1, 2, 3]
arr2 = [4, 5 ,6]
arr1.extend(arr2)
    ㄴ arr1 = [1, 2, 3, 4, 5, 6]
arr3 = arr1 + arr 2
    ㄴ arr3 = [1, 2, 3, 4, 5, 6]

4-4) 2차원의 빈 배열을 만들때
arr = [[] for _ in range(5)]
    ㄴ arr = [[], [], [], [], []] 가 만들어짐

4-5) 원하는 값이 가장 먼저 나오는 인덱스를 찾고싶을때
arr.index(값)
---------------------------------------------------------------
5. queue
from collections import deque

5-1) 선언
que = deque()

5-2) 추가
que.append(1)
que.append([1, 3])
    ㄴ [1, 3] 이라는 리스트가 que의 요소로 추가됨

5-3) 제거
que.popleft()

5-4) 비어있는지 확인
not que